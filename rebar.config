{erl_opts, [debug_info]}.
{deps, [
    grisp,
    {epmd , {git , "https://github.com/erlang/epmd" , {ref , "4d1a59"}}} ,
    lasp,
    {grisp_tools , {git , "https://github.com/grisp/grisp_tools.git" , {branch , "master"}}}
]}.

{plugins, [
    {rebar3_grisp , {git , "https://github.com/grisp/rebar3_grisp.git" , {ref , "7b4da95"}}}
]}.

%% == Erlang ==

{erl_opts , [
    debug_info
]}.

{grisp, [
    {otp, [
        {version, "22.0"}
    ]},
    {deploy, [
    % ==========
    % Mac OS X :
    % ==========
        {pre_script, "rm -rf /Volumes/GRISP/*"},
        {destination, "/Volumes/GRISP"},
        {post_script, "diskutil unmount /Volumes/GRISP"}
    % ==========
    % Linux :
    % ==========
    %     {pre_script, "rm -rf /media/user/GRISP/*"},
    %     {destination, "/media/user/GRISP"},
    %     {post_script, "umount /media/user/GRISP"}
    % ==========
    % Local :
    % ==========
        % {pre_script, "rm -rf /tmp/sd_card/*"},
        % {destination, "/tmp/sd_card"}
    ]}
]}.

%% == Shell ==
{shell, [
    {apps, []},
    {config, "./config/test.config.src"}
]}.

%% == Relx ==

{relx, [
%%------------------------------------------------------------------------------
    {release, {lynkia, "0.1.0"}, [
        grisp,
        {epmd , none},
        partisan,
        lasp,
        lynkia
    ]},
%%------------------------------------------------------------------------------
    {dev_mode, false},
    {generate_start_script, true},
    {extended_start_script, true},
    {sys_config, "./config/sys.config"},
    {vm_args, "./config/vm.args"}
]}.

{profiles, [
    {test, [
        {deps, [
            {grisp_emulation, {git, "https://github.com/grisp/grisp_emulation.git", {branch, "master"}}}
        ]},
        {dev_mode, true},
        {erl_opts, [
            nowarn_export_all,
            debug_info
        ]},
        {relx, [
            {sys_config_src, "./config/test.config.src"},
            {release, {lynkia, "0.1.0"}, [
                grisp,
                {epmd , none} ,
                partisan,
                lasp,
                lynkia
            ]}
        ]}
    ]}
]}.

{cover_enabled, true}.
{cover_export_enabled, true}.

%% == Dialyzer ==

{dialyzer, [
    {warnings, [
        underspecs,
        no_return,
        unmatched_returns,
        error_handling
    ]},
    {plt_prefix, "lynkia"},
    {plt_apps, top_level_deps},
    {plt_extra_apps, []}
]}.

%% == EDoc ==

{edoc_opts, [
    {report_missing_types, true},
    {source_path, ["src"]},
    {report_missing_types, true},
    {todo, true},
    {preprocess, true},
    {packages, false},
    {subpackages, false}
]}.

%% == Xref ==

{xref, [
    {xref_warnings, true},
    {xref_extra_paths, []},
    {xref_checks, [
        undefined_functions,
        deprecated_function_calls,
        undefined_function_calls,
        deprecated_functions
    ]}
]}.
